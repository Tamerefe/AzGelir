#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
AzGelir Tam Otomatik Windows Kurulum Olu≈üturucu
Sƒ±fƒ±rdan bilgisayarda her ≈üeyi kurar - Python, baƒüƒ±mlƒ±lƒ±klar, uygulama
"""

import os
import sys
import subprocess
import shutil
import urllib.request
import zipfile
import tempfile
from pathlib import Path

def create_full_installer():
    """Tam otomatik kurulum exe dosyasƒ± olu≈ütur"""
    
    print("üöÄ Tam otomatik Windows kurulum dosyasƒ± olu≈üturuluyor...")
    
    # NSIS script olu≈ütur - embedded Python ile
    nsis_script = """
; AzGelir Tam Otomatik Kurulum
; Python dahil her ≈üeyi kurar

!include "MUI2.nsh"
!include "FileFunc.nsh"

; Program bilgileri
!define PRODUCT_NAME "AzGelir"
!define PRODUCT_VERSION "1.0.0"
!define PRODUCT_PUBLISHER "Tamerefe"
!define PRODUCT_WEB_SITE "https://github.com/Tamerefe/AzGelir"

; Kurulum ayarlarƒ±
Name "${PRODUCT_NAME} ${PRODUCT_VERSION} - Tam Kurulum"
OutFile "AzGelir_Full_Setup.exe"
InstallDir "$PROGRAMFILES\\${PRODUCT_NAME}"
ShowInstDetails show
RequestExecutionLevel admin

; Modern UI ayarlarƒ±
!define MUI_ABORTWARNING
!define MUI_ICON "logo.ico"
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_BITMAP "header.bmp"
!define MUI_WELCOMEFINISHPAGE_BITMAP "welcome.bmp"

; Sayfalar
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE "LICENSE.txt"
!insertmacro MUI_PAGE_COMPONENTS
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!define MUI_FINISHPAGE_RUN "$INSTDIR\\AzGelir.exe"
!define MUI_FINISHPAGE_RUN_TEXT "AzGelir'i ≈üimdi √ßalƒ±≈ütƒ±r"
!insertmacro MUI_PAGE_FINISH

!insertmacro MUI_UNPAGE_WELCOME
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH

; Diller
!insertmacro MUI_LANGUAGE "Turkish"

; Deƒüi≈ükenler
Var PythonPath
Var NeedPython
Var NeedVCRedist

; Ana b√∂l√ºm
Section "AzGelir (Gerekli)" SEC01
  SectionIn RO
  
  ; Detaylƒ± log
  SetDetailsPrint both
  DetailPrint "AzGelir kurulumu ba≈ülatƒ±lƒ±yor..."
  
  ; Python kontrol√º
  Call CheckPython
  
  ; Visual C++ Redistributable kontrol√º
  Call CheckVCRedist
  
  ; Python kurulumu (gerekirse)
  StrCmp $NeedPython "1" 0 +3
  DetailPrint "Python kuruluyor..."
  Call InstallPython
  
  ; VC++ Redistributable kurulumu (gerekirse)  
  StrCmp $NeedVCRedist "1" 0 +3
  DetailPrint "Visual C++ Redistributable kuruluyor..."
  Call InstallVCRedist
  
  ; Ana dosyalarƒ± kopyala
  SetOutPath "$INSTDIR"
  DetailPrint "Program dosyalarƒ± kopyalanƒ±yor..."
  File "AzGelir.exe"
  File "logo.png"
  File "*.dll"
  
  ; Baƒüƒ±mlƒ±lƒ±k kontrol√º ve kurulumu
  DetailPrint "Python paketleri kontrol ediliyor..."
  Call InstallPythonPackages
  
  ; Registry kayƒ±tlarƒ±
  DetailPrint "Sistem kaydƒ± yapƒ±lƒ±yor..."
  WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}" "DisplayName" "${PRODUCT_NAME}"
  WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}" "UninstallString" "$INSTDIR\\Uninstall.exe"
  WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}" "DisplayIcon" "$INSTDIR\\AzGelir.exe"
  WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}" "Publisher" "${PRODUCT_PUBLISHER}"
  WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  
  ; Uninstaller olu≈ütur
  WriteUninstaller "$INSTDIR\\Uninstall.exe"
  
  DetailPrint "Kurulum tamamlandƒ±!"
SectionEnd

; Masa√ºst√º kƒ±sayolu
Section "Masa√ºst√º Kƒ±sayolu" SEC02
  CreateShortCut "$DESKTOP\\AzGelir.lnk" "$INSTDIR\\AzGelir.exe"
SectionEnd

; Ba≈ülat Men√ºs√º
Section "Ba≈ülat Men√ºs√º" SEC03
  CreateDirectory "$SMPROGRAMS\\AzGelir"
  CreateShortCut "$SMPROGRAMS\\AzGelir\\AzGelir.lnk" "$INSTDIR\\AzGelir.exe"
  CreateShortCut "$SMPROGRAMS\\AzGelir\\Kaldƒ±r.lnk" "$INSTDIR\\Uninstall.exe"
SectionEnd

; Python kontrol√º
Function CheckPython
  StrCpy $NeedPython "0"
  
  ; Python yolu ara
  ReadRegStr $PythonPath HKLM "SOFTWARE\\Python\\PythonCore\\3.11\\InstallPath" ""
  IfErrors 0 CheckPythonVersion
  
  ReadRegStr $PythonPath HKLM "SOFTWARE\\Python\\PythonCore\\3.10\\InstallPath" ""
  IfErrors 0 CheckPythonVersion
  
  ReadRegStr $PythonPath HKLM "SOFTWARE\\Python\\PythonCore\\3.9\\InstallPath" ""
  IfErrors 0 CheckPythonVersion
  
  ReadRegStr $PythonPath HKLM "SOFTWARE\\Python\\PythonCore\\3.8\\InstallPath" ""
  IfErrors 0 CheckPythonVersion
  
  ; Python bulunamadƒ±
  StrCpy $NeedPython "1"
  Goto EndPythonCheck
  
  CheckPythonVersion:
  ; Python versiyonu kontrol et
  nsExec::ExecToStack '"$PythonPath\\python.exe" --version'
  Pop $0
  StrCmp $0 "0" 0 +2
  Goto EndPythonCheck
  
  ; Python √ßalƒ±≈ümƒ±yor
  StrCpy $NeedPython "1"
  
  EndPythonCheck:
FunctionEnd

; Visual C++ Redistributable kontrol√º
Function CheckVCRedist
  StrCpy $NeedVCRedist "0"
  
  ; Registry'de VC++ 2015-2022 ara
  ReadRegStr $0 HKLM "SOFTWARE\\Microsoft\\VisualStudio\\14.0\\VC\\Runtimes\\x64" "Version"
  IfErrors 0 +3
  StrCpy $NeedVCRedist "1"
  Goto EndVCCheck
  
  ; Version kontrol√º (14.29+ gerekli)
  ${VersionCompare} $0 "14.29.0.0" $1
  IntCmp $1 -1 0 +2 +2
  StrCpy $NeedVCRedist "1"
  
  EndVCCheck:
FunctionEnd

; Python kurulumu
Function InstallPython
  DetailPrint "Python 3.11 indiriliyor..."
  
  ; Python embedded s√ºr√ºm√ºn√º kullan
  SetOutPath "$TEMP"
  File "python-3.11.0-embed-amd64.zip"
  
  DetailPrint "Python kuruluyor..."
  
  ; Embedded Python'u √ßƒ±kart
  CreateDirectory "$INSTDIR\\Python"
  nsisunz::UnzipToLog "$TEMP\\python-3.11.0-embed-amd64.zip" "$INSTDIR\\Python"
  
  ; pip kurulumu i√ßin get-pip.py indir
  inetc::get "https://bootstrap.pypa.io/get-pip.py" "$INSTDIR\\Python\\get-pip.py"
  
  ; pip kur
  nsExec::ExecToLog '"$INSTDIR\\Python\\python.exe" "$INSTDIR\\Python\\get-pip.py"'
  
  ; PATH'e ekle
  EnvVarUpdate $0 "PATH" "A" "HKLM" "$INSTDIR\\Python"
  EnvVarUpdate $0 "PATH" "A" "HKLM" "$INSTDIR\\Python\\Scripts"
  
  StrCpy $PythonPath "$INSTDIR\\Python"
FunctionEnd

; VC++ Redistributable kurulumu
Function InstallVCRedist
  DetailPrint "Visual C++ Redistributable indiriliyor..."
  
  SetOutPath "$TEMP"
  File "VC_redist.x64.exe"
  
  DetailPrint "Visual C++ Redistributable kuruluyor..."
  nsExec::ExecToLog '"$TEMP\\VC_redist.x64.exe" /quiet /norestart'
FunctionEnd

; Python paketleri kurulumu
Function InstallPythonPackages
  DetailPrint "PyQt5 kuruluyor..."
  nsExec::ExecToLog '"$PythonPath\\python.exe" -m pip install PyQt5==5.15.9'
  
  DetailPrint "pyinstaller kuruluyor..."
  nsExec::ExecToLog '"$PythonPath\\python.exe" -m pip install pyinstaller'
  
  DetailPrint "Diƒüer baƒüƒ±mlƒ±lƒ±klar kuruluyor..."
  nsExec::ExecToLog '"$PythonPath\\python.exe" -m pip install pywin32'
FunctionEnd

; B√∂l√ºm a√ßƒ±klamalarƒ±
LangString DESC_SEC01 ${LANG_TURKISH} "Ana uygulama ve gerekli bile≈üenler"
LangString DESC_SEC02 ${LANG_TURKISH} "Masa√ºst√ºnde kƒ±sayol olu≈üturur"
LangString DESC_SEC03 ${LANG_TURKISH} "Ba≈ülat men√ºs√ºnde kƒ±sayol olu≈üturur"

!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC01} $(DESC_SEC01)
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC02} $(DESC_SEC02)
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC03} $(DESC_SEC03)
!insertmacro MUI_FUNCTION_DESCRIPTION_END

; Kaldƒ±rƒ±cƒ±
Section Uninstall
  ; Dosyalarƒ± kaldƒ±r
  Delete "$INSTDIR\\AzGelir.exe"
  Delete "$INSTDIR\\logo.png"
  Delete "$INSTDIR\\*.dll"
  Delete "$INSTDIR\\Uninstall.exe"
  
  ; Python klas√∂r√ºn√º kaldƒ±r (sadece uygulama i√ßin kurulduysa)
  RMDir /r "$INSTDIR\\Python"
  
  ; Kƒ±sayollarƒ± kaldƒ±r
  Delete "$DESKTOP\\AzGelir.lnk"
  Delete "$SMPROGRAMS\\AzGelir\\AzGelir.lnk"
  Delete "$SMPROGRAMS\\AzGelir\\Kaldƒ±r.lnk"
  RMDir "$SMPROGRAMS\\AzGelir"
  
  ; Ana klas√∂r√º kaldƒ±r
  RMDir "$INSTDIR"
  
  ; Registry temizle
  DeleteRegKey HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"
SectionEnd
"""
    
    # NSIS script dosyasƒ±nƒ± yaz
    with open("full_installer.nsi", "w", encoding="utf-8") as f:
        f.write(nsis_script)
    
    print("‚úì NSIS installer scripti olu≈üturuldu")

def download_dependencies():
    """Gerekli dosyalarƒ± indir"""
    print("üì• Baƒüƒ±mlƒ±lƒ±k dosyalarƒ± indiriliyor...")
    
    downloads = [
        {
            "name": "Python Embedded",
            "url": "https://www.python.org/ftp/python/3.11.9/python-3.11.9-embed-amd64.zip",
            "file": "python-3.11.0-embed-amd64.zip"
        },
        {
            "name": "Visual C++ Redistributable",
            "url": "https://aka.ms/vs/17/release/vc_redist.x64.exe",
            "file": "VC_redist.x64.exe"
        }
    ]
    
    for item in downloads:
        if not os.path.exists(item["file"]):
            print(f"üì• {item['name']} indiriliyor...")
            try:
                urllib.request.urlretrieve(item["url"], item["file"])
                print(f"‚úì {item['name']} indirildi")
            except Exception as e:
                print(f"‚ùå {item['name']} indirilemedi: {e}")
        else:
            print(f"‚úì {item['name']} zaten mevcut")

def create_standalone_exe():
    """Tek dosya standalone exe olu≈ütur"""
    print("üî® Standalone exe olu≈üturuluyor...")
    
    # PyInstaller ile bundle olu≈ütur
    standalone_script = """
import sys
import os
import subprocess
import urllib.request
import zipfile
import tempfile
import shutil
from pathlib import Path
import tkinter as tk
from tkinter import ttk, messagebox
import threading

class AzGelirInstaller:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("AzGelir Kurulum Sihirbazƒ±")
        self.root.geometry("600x500")
        self.root.resizable(False, False)
        
        # Ana frame
        self.main_frame = ttk.Frame(self.root, padding="20")
        self.main_frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))
        
        self.create_widgets()
        self.install_dir = "C:\\\\Program Files\\\\AzGelir"
        
    def create_widgets(self):
        # Ba≈ülƒ±k
        title = ttk.Label(self.main_frame, text="AzGelir Kurulum Sihirbazƒ±", 
                         font=("Arial", 16, "bold"))
        title.grid(row=0, column=0, columnspan=2, pady=(0, 20))
        
        # A√ßƒ±klama
        desc = ttk.Label(self.main_frame, 
                        text="Bu kurulum sihirbazƒ± AzGelir uygulamasƒ±nƒ± ve t√ºm\\n"
                             "gerekli bile≈üenleri otomatik olarak kuracaktƒ±r.",
                        justify=tk.CENTER)
        desc.grid(row=1, column=0, columnspan=2, pady=(0, 20))
        
        # Kurulum dizini
        ttk.Label(self.main_frame, text="Kurulum Dizini:").grid(row=2, column=0, sticky=tk.W, pady=5)
        self.dir_var = tk.StringVar(value=self.install_dir)
        dir_entry = ttk.Entry(self.main_frame, textvariable=self.dir_var, width=50)
        dir_entry.grid(row=2, column=1, sticky=(tk.W, tk.E), pady=5)
        
        # Se√ßenekler
        self.desktop_var = tk.BooleanVar(value=True)
        ttk.Checkbutton(self.main_frame, text="Masa√ºst√º kƒ±sayolu olu≈ütur", 
                       variable=self.desktop_var).grid(row=3, column=0, columnspan=2, sticky=tk.W, pady=5)
        
        self.startmenu_var = tk.BooleanVar(value=True)
        ttk.Checkbutton(self.main_frame, text="Ba≈ülat men√ºs√º kƒ±sayolu olu≈ütur", 
                       variable=self.startmenu_var).grid(row=4, column=0, columnspan=2, sticky=tk.W, pady=5)
        
        # ƒ∞lerleme √ßubuƒüu
        self.progress = ttk.Progressbar(self.main_frame, mode='indeterminate')
        self.progress.grid(row=5, column=0, columnspan=2, sticky=(tk.W, tk.E), pady=20)
        
        # Durum etiketi
        self.status = ttk.Label(self.main_frame, text="Kuruluma hazƒ±r")
        self.status.grid(row=6, column=0, columnspan=2, pady=5)
        
        # Butonlar
        button_frame = ttk.Frame(self.main_frame)
        button_frame.grid(row=7, column=0, columnspan=2, pady=20)
        
        self.install_btn = ttk.Button(button_frame, text="Kurulumu Ba≈ülat", 
                                     command=self.start_installation)
        self.install_btn.pack(side=tk.LEFT, padx=5)
        
        ttk.Button(button_frame, text="√áƒ±kƒ±≈ü", 
                  command=self.root.quit).pack(side=tk.LEFT, padx=5)
        
    def update_status(self, text):
        self.status.config(text=text)
        self.root.update()
        
    def start_installation(self):
        self.install_btn.config(state='disabled')
        self.progress.start()
        
        # Kurulumu ayrƒ± thread'de √ßalƒ±≈ütƒ±r
        thread = threading.Thread(target=self.install)
        thread.start()
        
    def install(self):
        try:
            # 1. Python kontrol√º
            self.update_status("Python kontrol ediliyor...")
            if not self.check_python():
                self.update_status("Python kuruluyor...")
                self.install_python()
            
            # 2. VC++ kontrol√º
            self.update_status("Visual C++ Redistributable kontrol ediliyor...")
            if not self.check_vcredist():
                self.update_status("Visual C++ Redistributable kuruluyor...")
                self.install_vcredist()
            
            # 3. Kurulum dizini olu≈ütur
            self.update_status("Kurulum dizini olu≈üturuluyor...")
            os.makedirs(self.dir_var.get(), exist_ok=True)
            
            # 4. AzGelir dosyalarƒ±nƒ± kopyala
            self.update_status("AzGelir dosyalarƒ± kopyalanƒ±yor...")
            self.copy_azgelir_files()
            
            # 5. Python paketleri kur
            self.update_status("Python paketleri kuruluyor...")
            self.install_python_packages()
            
            # 6. Kƒ±sayollar olu≈ütur
            self.update_status("Kƒ±sayollar olu≈üturuluyor...")
            self.create_shortcuts()
            
            # 7. Registry kayƒ±tlarƒ±
            self.update_status("Sistem kayƒ±tlarƒ± olu≈üturuluyor...")
            self.create_registry_entries()
            
            self.progress.stop()
            self.update_status("Kurulum tamamlandƒ±!")
            
            messagebox.showinfo("Kurulum Tamamlandƒ±", 
                              "AzGelir ba≈üarƒ±yla kuruldu!\\n\\n"
                              "Uygulamayƒ± masa√ºst√º kƒ±sayolundan veya\\n"
                              "Ba≈ülat men√ºs√ºnden √ßalƒ±≈ütƒ±rabilirsiniz.")
            
        except Exception as e:
            self.progress.stop()
            self.update_status("Kurulum hatasƒ±!")
            messagebox.showerror("Hata", f"Kurulum sƒ±rasƒ±nda hata olu≈ütu:\\n{str(e)}")
        finally:
            self.install_btn.config(state='normal')
            
    def check_python(self):
        try:
            result = subprocess.run(['python', '--version'], 
                                  capture_output=True, text=True)
            return result.returncode == 0
        except:
            return False
            
    def check_vcredist(self):
        try:
            import winreg
            key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, 
                               r"SOFTWARE\\Microsoft\\VisualStudio\\14.0\\VC\\Runtimes\\x64")
            return True
        except:
            return False
            
    def install_python(self):
        # Python embedded s√ºr√ºm√ºn√º indir ve kur
        python_url = "https://www.python.org/ftp/python/3.11.9/python-3.11.9-embed-amd64.zip"
        python_zip = os.path.join(tempfile.gettempdir(), "python.zip")
        
        urllib.request.urlretrieve(python_url, python_zip)
        
        python_dir = os.path.join(self.dir_var.get(), "Python")
        os.makedirs(python_dir, exist_ok=True)
        
        with zipfile.ZipFile(python_zip, 'r') as zip_ref:
            zip_ref.extractall(python_dir)
            
        # get-pip.py indir ve pip kur
        pip_url = "https://bootstrap.pypa.io/get-pip.py"
        pip_file = os.path.join(python_dir, "get-pip.py")
        urllib.request.urlretrieve(pip_url, pip_file)
        
        subprocess.run([os.path.join(python_dir, "python.exe"), pip_file])
        
    def install_vcredist(self):
        vc_url = "https://aka.ms/vs/17/release/vc_redist.x64.exe"
        vc_file = os.path.join(tempfile.gettempdir(), "vc_redist.exe")
        
        urllib.request.urlretrieve(vc_url, vc_file)
        subprocess.run([vc_file, "/quiet", "/norestart"])
        
    def copy_azgelir_files(self):
        # AzGelir exe dosyasƒ±nƒ± bundle'dan √ßƒ±kar
        import base64
        
        # Base64 encoded AzGelir.exe (buraya ger√ßek exe'nin base64 hali gelecek)
        azgelir_data = b''  # Bu kƒ±sƒ±m build sƒ±rasƒ±nda doldurulacak
        
        azgelir_path = os.path.join(self.dir_var.get(), "AzGelir.exe")
        with open(azgelir_path, 'wb') as f:
            f.write(azgelir_data)
            
    def install_python_packages(self):
        python_exe = shutil.which("python") or os.path.join(self.dir_var.get(), "Python", "python.exe")
        
        packages = ["PyQt5==5.15.9", "pywin32"]
        for package in packages:
            subprocess.run([python_exe, "-m", "pip", "install", package])
            
    def create_shortcuts(self):
        if self.desktop_var.get():
            # Masa√ºst√º kƒ±sayolu
            pass
            
        if self.startmenu_var.get():
            # Ba≈ülat men√ºs√º kƒ±sayolu
            pass
            
    def create_registry_entries(self):
        # Uninstaller kayƒ±tlarƒ±
        pass
        
    def run(self):
        self.root.mainloop()

if __name__ == "__main__":
    installer = AzGelirInstaller()
    installer.run()
"""
    
    # Standalone installer script dosyasƒ±nƒ± yaz
    with open("standalone_installer.py", "w", encoding="utf-8") as f:
        f.write(standalone_script)
    
    print("‚úì Standalone installer scripti olu≈üturuldu")

def create_auto_installer_batch():
    """Tam otomatik batch installer olu≈ütur"""
    print("üìù Otomatik batch installer olu≈üturuluyor...")
    
    batch_content = """@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion
title AzGelir Tam Otomatik Kurulum

:: Y√∂netici kontrol√º
net session >nul 2>&1
if %errorLevel% neq 0 (
    echo Bu kurulum y√∂netici ayrƒ±calƒ±klarƒ± gerektirir.
    echo L√ºtfen saƒü tƒ±klayƒ±p "Y√∂netici olarak √ßalƒ±≈ütƒ±r" se√ßin.
    pause
    exit /b 1
)

echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë                                                               ‚ïë
echo ‚ïë                AzGelir Tam Otomatik Kurulum                  ‚ïë
echo ‚ïë                                                               ‚ïë
echo ‚ïë               Sƒ±fƒ±rdan Bilgisayar Kurulumu                   ‚ïë
echo ‚ïë                                                               ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

echo ‚úì Bu kurulum ≈üunlarƒ± otomatik olarak kuracak:
echo   ‚Ä¢ Python 3.11 (embedded)
echo   ‚Ä¢ Visual C++ Redistributable
echo   ‚Ä¢ PyQt5 ve diƒüer gerekli k√ºt√ºphaneler
echo   ‚Ä¢ AzGelir uygulamasƒ±
echo   ‚Ä¢ Masa√ºst√º ve Ba≈ülat men√ºs√º kƒ±sayollarƒ±
echo.

set /p confirm="Kuruluma devam etmek istiyor musunuz? (Y/N): "
if /i not "%confirm%"=="Y" exit /b 0

echo.
echo [1/7] Sistem kontrol√º yapƒ±lƒ±yor...
call :check_system

echo [2/7] Kurulum dizini hazƒ±rlanƒ±yor...
set "INSTALL_DIR=%ProgramFiles%\\AzGelir"
if not exist "%INSTALL_DIR%" mkdir "%INSTALL_DIR%"

echo [3/7] Python kontrol ediliyor...
call :check_python
if !PYTHON_NEEDED!==1 (
    echo [3a/7] Python kuruluyor...
    call :install_python
)

echo [4/7] Visual C++ Redistributable kontrol ediliyor...
call :check_vcredist
if !VCREDIST_NEEDED!==1 (
    echo [4a/7] Visual C++ Redistributable kuruluyor...
    call :install_vcredist
)

echo [5/7] AzGelir dosyalarƒ± kopyalanƒ±yor...
call :copy_azgelir

echo [6/7] Python paketleri kuruluyor...
call :install_packages

echo [7/7] Sistem entegrasyonu yapƒ±lƒ±yor...
call :create_shortcuts
call :create_registry

echo.
echo ‚úÖ Kurulum ba≈üarƒ±yla tamamlandƒ±!
echo.
echo üöÄ AzGelir ≈üu yollardan √ßalƒ±≈ütƒ±rƒ±labilir:
echo   ‚Ä¢ Masa√ºst√º kƒ±sayolu: AzGelir
echo   ‚Ä¢ Ba≈ülat men√ºs√º: T√ºm Programlar > AzGelir
echo   ‚Ä¢ Doƒürudan: "%INSTALL_DIR%\\AzGelir.exe"
echo.

set /p run_now="AzGelir'i ≈üimdi √ßalƒ±≈ütƒ±rmak istiyor musunuz? (Y/N): "
if /i "%run_now%"=="Y" start "" "%INSTALL_DIR%\\AzGelir.exe"

pause
exit /b 0

:check_system
systeminfo | find "OS Name" | find "Windows"
if errorlevel 1 (
    echo ‚ùå Bu kurulum sadece Windows sistemlerde √ßalƒ±≈üƒ±r!
    pause
    exit /b 1
)

systeminfo | find "System Type" | find "x64"
if errorlevel 1 (
    echo ‚ùå Bu kurulum sadece 64-bit sistemlerde √ßalƒ±≈üƒ±r!
    pause
    exit /b 1
)
goto :eof

:check_python
set PYTHON_NEEDED=1
python --version >nul 2>&1
if %errorlevel%==0 (
    echo ‚úì Python zaten kurulu
    set PYTHON_NEEDED=0
) else (
    echo ‚ö† Python kurulu deƒüil, kurulacak
)
goto :eof

:check_vcredist
set VCREDIST_NEEDED=1
reg query "HKLM\\SOFTWARE\\Microsoft\\VisualStudio\\14.0\\VC\\Runtimes\\x64" >nul 2>&1
if %errorlevel%==0 (
    echo ‚úì Visual C++ Redistributable zaten kurulu
    set VCREDIST_NEEDED=0
) else (
    echo ‚ö† Visual C++ Redistributable kurulu deƒüil, kurulacak
)
goto :eof

:install_python
echo   üì• Python indiriliyor...
powershell -Command "& {Invoke-WebRequest -Uri 'https://www.python.org/ftp/python/3.11.9/python-3.11.9-embed-amd64.zip' -OutFile '%TEMP%\\python.zip'}"

echo   üìÇ Python kuruluyor...
powershell -Command "& {Expand-Archive -Path '%TEMP%\\python.zip' -DestinationPath '%INSTALL_DIR%\\Python' -Force}"

echo   üîß pip kuruluyor...
powershell -Command "& {Invoke-WebRequest -Uri 'https://bootstrap.pypa.io/get-pip.py' -OutFile '%INSTALL_DIR%\\Python\\get-pip.py'}"
"%INSTALL_DIR%\\Python\\python.exe" "%INSTALL_DIR%\\Python\\get-pip.py"

echo   ‚öôÔ∏è PATH g√ºncelleniyor...
setx PATH "%PATH%;%INSTALL_DIR%\\Python;%INSTALL_DIR%\\Python\\Scripts" /M

echo ‚úì Python kurulumu tamamlandƒ±
goto :eof

:install_vcredist
echo   üì• Visual C++ Redistributable indiriliyor...
powershell -Command "& {Invoke-WebRequest -Uri 'https://aka.ms/vs/17/release/vc_redist.x64.exe' -OutFile '%TEMP%\\vc_redist.exe'}"

echo   üì¶ Visual C++ Redistributable kuruluyor...
"%TEMP%\\vc_redist.exe" /quiet /norestart

echo ‚úì Visual C++ Redistributable kurulumu tamamlandƒ±
goto :eof

:copy_azgelir
:: AzGelir.exe'yi buraya g√∂m√ºl√º olarak ekleyeceƒüiz
echo   Bu kƒ±sƒ±mda AzGelir dosyalarƒ± kopyalanacak...
:: copy "AzGelir.exe" "%INSTALL_DIR%\\"
:: copy "logo.png" "%INSTALL_DIR%\\"
echo ‚úì AzGelir dosyalarƒ± kopyalandƒ±
goto :eof

:install_packages
echo   üì¶ PyQt5 kuruluyor...
if exist "%INSTALL_DIR%\\Python\\python.exe" (
    "%INSTALL_DIR%\\Python\\python.exe" -m pip install PyQt5==5.15.9
) else (
    python -m pip install PyQt5==5.15.9
)

echo   üì¶ pywin32 kuruluyor...
if exist "%INSTALL_DIR%\\Python\\python.exe" (
    "%INSTALL_DIR%\\Python\\python.exe" -m pip install pywin32
) else (
    python -m pip install pywin32
)

echo ‚úì Python paketleri kuruldu
goto :eof

:create_shortcuts
echo   üîó Masa√ºst√º kƒ±sayolu olu≈üturuluyor...
powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%USERPROFILE%\\Desktop\\AzGelir.lnk'); $Shortcut.TargetPath = '%INSTALL_DIR%\\AzGelir.exe'; $Shortcut.WorkingDirectory = '%INSTALL_DIR%'; $Shortcut.Description = 'AzGelir - Gelir/Gider Takip Uygulamasƒ±'; $Shortcut.Save()}"

echo   üìã Ba≈ülat men√ºs√º kƒ±sayolu olu≈üturuluyor...
if not exist "%ProgramData%\\Microsoft\\Windows\\Start Menu\\Programs\\AzGelir" mkdir "%ProgramData%\\Microsoft\\Windows\\Start Menu\\Programs\\AzGelir"
powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%ProgramData%\\Microsoft\\Windows\\Start Menu\\Programs\\AzGelir\\AzGelir.lnk'); $Shortcut.TargetPath = '%INSTALL_DIR%\\AzGelir.exe'; $Shortcut.WorkingDirectory = '%INSTALL_DIR%'; $Shortcut.Description = 'AzGelir - Gelir/Gider Takip Uygulamasƒ±'; $Shortcut.Save()}"

echo ‚úì Kƒ±sayollar olu≈üturuldu
goto :eof

:create_registry
echo   üìù Program kaydƒ± yapƒ±lƒ±yor...
reg add "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\AzGelir" /v "DisplayName" /t REG_SZ /d "AzGelir" /f
reg add "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\AzGelir" /v "DisplayVersion" /t REG_SZ /d "1.0.0" /f
reg add "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\AzGelir" /v "Publisher" /t REG_SZ /d "Tamerefe" /f
reg add "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\AzGelir" /v "InstallLocation" /t REG_SZ /d "%INSTALL_DIR%" /f
reg add "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\AzGelir" /v "UninstallString" /t REG_SZ /d "%INSTALL_DIR%\\uninstall.bat" /f

echo ‚úì Sistem kaydƒ± tamamlandƒ±
goto :eof
"""
    
    with open("AzGelir_Full_Auto_Install.bat", "w", encoding="utf-8") as f:
        f.write(batch_content)
    
    print("‚úì Tam otomatik batch installer olu≈üturuldu")

def create_powershell_installer():
    """PowerShell tabanlƒ± geli≈ümi≈ü installer olu≈ütur"""
    print("üí† PowerShell installer olu≈üturuluyor...")
    
    ps_content = """# AzGelir Tam Otomatik PowerShell Kurulum
# Sƒ±fƒ±rdan bilgisayarda her ≈üeyi kurar

param(
    [string]$InstallPath = "$env:ProgramFiles\\AzGelir",
    [switch]$Silent = $false,
    [switch]$NoDesktopShortcut = $false,
    [switch]$NoStartMenuShortcut = $false
)

# Y√∂netici kontrol√º
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Error "Bu script y√∂netici ayrƒ±calƒ±klarƒ± gerektirir!"
    Write-Host "PowerShell'i y√∂netici olarak √ßalƒ±≈ütƒ±rƒ±n ve tekrar deneyin." -ForegroundColor Yellow
    exit 1
}

# Renkli √ßƒ±ktƒ± fonksiyonlarƒ±
function Write-Success { param($Message) Write-Host "‚úì $Message" -ForegroundColor Green }
function Write-Error { param($Message) Write-Host "‚úó $Message" -ForegroundColor Red }
function Write-Warning { param($Message) Write-Host "‚ö† $Message" -ForegroundColor Yellow }
function Write-Info { param($Message) Write-Host "‚Ñπ $Message" -ForegroundColor Cyan }
function Write-Step { param($Step, $Message) Write-Host "[$Step] $Message" -ForegroundColor Blue }

# Banner
if (-not $Silent) {
    Clear-Host
    Write-Host ""
    Write-Host "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" -ForegroundColor Blue
    Write-Host "‚ïë                                                               ‚ïë" -ForegroundColor Blue
    Write-Host "‚ïë                AzGelir Tam Otomatik Kurulum                  ‚ïë" -ForegroundColor Blue
    Write-Host "‚ïë                                                               ‚ïë" -ForegroundColor Blue
    Write-Host "‚ïë               Sƒ±fƒ±rdan Bilgisayar Kurulumu                   ‚ïë" -ForegroundColor Blue
    Write-Host "‚ïë                                                               ‚ïë" -ForegroundColor Blue
    Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" -ForegroundColor Blue
    Write-Host ""
    
    Write-Info "Bu kurulum ≈üunlarƒ± otomatik olarak kuracak:"
    Write-Host "  ‚Ä¢ Python 3.11 (embedded)" -ForegroundColor White
    Write-Host "  ‚Ä¢ Visual C++ Redistributable" -ForegroundColor White
    Write-Host "  ‚Ä¢ PyQt5 ve diƒüer gerekli k√ºt√ºphaneler" -ForegroundColor White
    Write-Host "  ‚Ä¢ AzGelir uygulamasƒ±" -ForegroundColor White
    Write-Host "  ‚Ä¢ Masa√ºst√º ve Ba≈ülat men√ºs√º kƒ±sayollarƒ±" -ForegroundColor White
    Write-Host ""
    
    $confirm = Read-Host "Kuruluma devam etmek istiyor musunuz? (Y/N)"
    if ($confirm -ne "Y" -and $confirm -ne "y") {
        Write-Info "Kurulum iptal edildi."
        exit 0
    }
}

try {
    Write-Step "1/8" "Sistem kontrol√º yapƒ±lƒ±yor..."
    
    # Sistem kontrol√º
    $osInfo = Get-WmiObject -Class Win32_OperatingSystem
    $architecture = $osInfo.OSArchitecture
    
    if ($architecture -ne "64-bit") {
        throw "Bu kurulum sadece 64-bit Windows sistemlerde √ßalƒ±≈üƒ±r!"
    }
    
    Write-Success "Sistem uyumlu: $($osInfo.Caption) $architecture"
    
    Write-Step "2/8" "Kurulum dizini hazƒ±rlanƒ±yor..."
    
    # Kurulum dizini olu≈ütur
    if (-not (Test-Path $InstallPath)) {
        New-Item -Path $InstallPath -ItemType Directory -Force | Out-Null
    }
    Write-Success "Kurulum dizini: $InstallPath"
    
    Write-Step "3/8" "Python kontrol ediliyor..."
    
    # Python kontrol√º
    $pythonInstalled = $false
    try {
        $pythonVersion = python --version 2>$null
        if ($pythonVersion -match "Python 3\.([8-9]|1[0-9])") {
            Write-Success "Python zaten kurulu: $pythonVersion"
            $pythonInstalled = $true
            $pythonExe = "python"
        }
    } catch {
        Write-Warning "Python kurulu deƒüil"
    }
    
    # Python kurulumu
    if (-not $pythonInstalled) {
        Write-Step "3a/8" "Python kuruluyor..."
        
        $pythonUrl = "https://www.python.org/ftp/python/3.11.9/python-3.11.9-embed-amd64.zip"
        $pythonZip = "$env:TEMP\\python.zip"
        $pythonDir = "$InstallPath\\Python"
        
        Write-Info "Python indiriliyor..."
        Invoke-WebRequest -Uri $pythonUrl -OutFile $pythonZip -UseBasicParsing
        
        Write-Info "Python kuruluyor..."
        if (Test-Path $pythonDir) {
            Remove-Item $pythonDir -Recurse -Force
        }
        Expand-Archive -Path $pythonZip -DestinationPath $pythonDir -Force
        
        # pip kurulumu
        Write-Info "pip kuruluyor..."
        $pipUrl = "https://bootstrap.pypa.io/get-pip.py"
        $pipFile = "$pythonDir\\get-pip.py"
        Invoke-WebRequest -Uri $pipUrl -OutFile $pipFile -UseBasicParsing
        
        # python._pth dosyasƒ±nƒ± d√ºzenle (pip i√ßin)
        $pthFile = Get-ChildItem "$pythonDir\\*._pth" | Select-Object -First 1
        if ($pthFile) {
            Add-Content $pthFile.FullName "import site"
        }
        
        & "$pythonDir\\python.exe" $pipFile
        
        $pythonExe = "$pythonDir\\python.exe"
        Write-Success "Python kurulumu tamamlandƒ±"
    }
    
    Write-Step "4/8" "Visual C++ Redistributable kontrol ediliyor..."
    
    # VC++ Redistributable kontrol√º
    $vcInstalled = $false
    try {
        $vcKey = Get-ItemProperty "HKLM:\\SOFTWARE\\Microsoft\\VisualStudio\\14.0\\VC\\Runtimes\\x64" -ErrorAction Stop
        if ($vcKey.Version -ge "14.29") {
            Write-Success "Visual C++ Redistributable zaten kurulu"
            $vcInstalled = $true
        }
    } catch {
        Write-Warning "Visual C++ Redistributable kurulu deƒüil"
    }
    
    # VC++ kurulumu
    if (-not $vcInstalled) {
        Write-Step "4a/8" "Visual C++ Redistributable kuruluyor..."
        
        $vcUrl = "https://aka.ms/vs/17/release/vc_redist.x64.exe"
        $vcFile = "$env:TEMP\\vc_redist.exe"
        
        Write-Info "Visual C++ Redistributable indiriliyor..."
        Invoke-WebRequest -Uri $vcUrl -OutFile $vcFile -UseBasicParsing
        
        Write-Info "Visual C++ Redistributable kuruluyor..."
        Start-Process -FilePath $vcFile -ArgumentList "/quiet", "/norestart" -Wait
        
        Write-Success "Visual C++ Redistributable kurulumu tamamlandƒ±"
    }
    
    Write-Step "5/8" "AzGelir dosyalarƒ± hazƒ±rlanƒ±yor..."
    
    # AzGelir dosyalarƒ±nƒ± kopyala (bu kƒ±sƒ±m build sƒ±rasƒ±nda doldurulacak)
    # Base64 encoded dosyalar buraya gelecek
    
    Write-Success "AzGelir dosyalarƒ± hazƒ±rlandƒ±"
    
    Write-Step "6/8" "Python paketleri kuruluyor..."
    
    # PyQt5 kurulumu
    Write-Info "PyQt5 kuruluyor..."
    & $pythonExe -m pip install PyQt5==5.15.9 --quiet
    
    # pywin32 kurulumu
    Write-Info "pywin32 kuruluyor..."
    & $pythonExe -m pip install pywin32 --quiet
    
    # Diƒüer baƒüƒ±mlƒ±lƒ±klar
    Write-Info "Diƒüer baƒüƒ±mlƒ±lƒ±klar kuruluyor..."
    & $pythonExe -m pip install pyinstaller --quiet
    
    Write-Success "Python paketleri kuruldu"
    
    Write-Step "7/8" "Kƒ±sayollar olu≈üturuluyor..."
    
    # COM Shell nesnesi
    $WshShell = New-Object -comObject WScript.Shell
    
    # Masa√ºst√º kƒ±sayolu
    if (-not $NoDesktopShortcut) {
        $DesktopPath = [Environment]::GetFolderPath("Desktop")
        $ShortcutPath = "$DesktopPath\\AzGelir.lnk"
        $Shortcut = $WshShell.CreateShortcut($ShortcutPath)
        $Shortcut.TargetPath = "$InstallPath\\AzGelir.exe"
        $Shortcut.WorkingDirectory = $InstallPath
        $Shortcut.Description = "AzGelir - Gelir/Gider Takip Uygulamasƒ±"
        $Shortcut.Save()
        Write-Success "Masa√ºst√º kƒ±sayolu olu≈üturuldu"
    }
    
    # Ba≈ülat men√ºs√º kƒ±sayolu
    if (-not $NoStartMenuShortcut) {
        $StartMenuPath = "$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\AzGelir"
        if (-not (Test-Path $StartMenuPath)) {
            New-Item -Path $StartMenuPath -ItemType Directory -Force | Out-Null
        }
        
        $StartShortcutPath = "$StartMenuPath\\AzGelir.lnk"
        $StartShortcut = $WshShell.CreateShortcut($StartShortcutPath)
        $StartShortcut.TargetPath = "$InstallPath\\AzGelir.exe"
        $StartShortcut.WorkingDirectory = $InstallPath
        $StartShortcut.Description = "AzGelir - Gelir/Gider Takip Uygulamasƒ±"
        $StartShortcut.Save()
        
        # Kaldƒ±rƒ±cƒ± kƒ±sayolu
        $UninstallShortcutPath = "$StartMenuPath\\AzGelir Kaldƒ±r.lnk"
        $UninstallShortcut = $WshShell.CreateShortcut($UninstallShortcutPath)
        $UninstallShortcut.TargetPath = "powershell.exe"
        $UninstallShortcut.Arguments = "-ExecutionPolicy Bypass -File \\"$InstallPath\\uninstall.ps1\\""
        $UninstallShortcut.Description = "AzGelir Kaldƒ±r"
        $UninstallShortcut.Save()
        
        Write-Success "Ba≈ülat men√ºs√º kƒ±sayollarƒ± olu≈üturuldu"
    }
    
    Write-Step "8/8" "Sistem entegrasyonu tamamlanƒ±yor..."
    
    # Registry kayƒ±tlarƒ±
    $RegPath = "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\AzGelir"
    New-Item -Path $RegPath -Force | Out-Null
    Set-ItemProperty -Path $RegPath -Name "DisplayName" -Value "AzGelir"
    Set-ItemProperty -Path $RegPath -Name "DisplayVersion" -Value "1.0.0"
    Set-ItemProperty -Path $RegPath -Name "Publisher" -Value "Tamerefe"
    Set-ItemProperty -Path $RegPath -Name "InstallLocation" -Value $InstallPath
    Set-ItemProperty -Path $RegPath -Name "UninstallString" -Value "powershell.exe -ExecutionPolicy Bypass -File \\"$InstallPath\\uninstall.ps1\\""
    Set-ItemProperty -Path $RegPath -Name "URLInfoAbout" -Value "https://github.com/Tamerefe/AzGelir"
    
    # Kaldƒ±rƒ±cƒ± script olu≈ütur
    $UninstallScript = @"
# AzGelir Kaldƒ±rƒ±cƒ±
Write-Host "AzGelir kaldƒ±rƒ±lƒ±yor..." -ForegroundColor Yellow

# √áalƒ±≈üan uygulamayƒ± durdur
Get-Process -Name "AzGelir" -ErrorAction SilentlyContinue | Stop-Process -Force

# Dosyalarƒ± kaldƒ±r
Remove-Item "$InstallPath" -Recurse -Force -ErrorAction SilentlyContinue

# Kƒ±sayollarƒ± kaldƒ±r
Remove-Item "$env:PUBLIC\\Desktop\\AzGelir.lnk" -Force -ErrorAction SilentlyContinue
Remove-Item "$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\AzGelir" -Recurse -Force -ErrorAction SilentlyContinue

# Registry temizle
Remove-Item "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\AzGelir" -Force -ErrorAction SilentlyContinue

Write-Host "AzGelir ba≈üarƒ±yla kaldƒ±rƒ±ldƒ±!" -ForegroundColor Green
"@
    
    $UninstallScript | Out-File "$InstallPath\\uninstall.ps1" -Encoding UTF8
    
    Write-Success "Sistem entegrasyonu tamamlandƒ±"
    
    Write-Host ""
    Write-Host "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" -ForegroundColor Green
    Write-Host "‚ïë                                                               ‚ïë" -ForegroundColor Green
    Write-Host "‚ïë                   KURULUM TAMAMLANDI!                        ‚ïë" -ForegroundColor Green
    Write-Host "‚ïë                                                               ‚ïë" -ForegroundColor Green
    Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" -ForegroundColor Green
    Write-Host ""
    
    Write-Success "AzGelir ba≈üarƒ±yla kuruldu!"
    Write-Host ""
    Write-Info "√áalƒ±≈ütƒ±rma se√ßenekleri:"
    Write-Host "  ‚Ä¢ Masa√ºst√º kƒ±sayolu: AzGelir" -ForegroundColor White
    Write-Host "  ‚Ä¢ Ba≈ülat men√ºs√º: T√ºm Programlar > AzGelir" -ForegroundColor White
    Write-Host "  ‚Ä¢ Doƒürudan: $InstallPath\\AzGelir.exe" -ForegroundColor White
    Write-Host ""
    
    if (-not $Silent) {
        $runNow = Read-Host "AzGelir'i ≈üimdi √ßalƒ±≈ütƒ±rmak istiyor musunuz? (Y/N)"
        if ($runNow -eq "Y" -or $runNow -eq "y") {
            Start-Process "$InstallPath\\AzGelir.exe"
        }
    }
    
} catch {
    Write-Error "Kurulum sƒ±rasƒ±nda hata olu≈ütu: $($_.Exception.Message)"
    Write-Host ""
    Write-Warning "L√ºtfen ≈üunlarƒ± kontrol edin:"
    Write-Host "  ‚Ä¢ ƒ∞nternet baƒülantƒ±nƒ±z aktif mi?" -ForegroundColor White
    Write-Host "  ‚Ä¢ Y√∂netici ayrƒ±calƒ±klarƒ± var mƒ±?" -ForegroundColor White
    Write-Host "  ‚Ä¢ Antivƒ±r√ºs yazƒ±lƒ±mƒ± engelliyor mu?" -ForegroundColor White
    Write-Host ""
    
    if (-not $Silent) {
        Read-Host "√áƒ±kmak i√ßin Enter'a basƒ±n"
    }
    exit 1
}"""
    
    with open("AzGelir_Full_Install.ps1", "w", encoding="utf-8") as f:
        f.write(ps_content)
    
    print("‚úì PowerShell installer olu≈üturuldu")

def create_self_extracting_exe():
    """Kendi kendini √ßƒ±karan exe olu≈ütur"""
    print("üì¶ Self-extracting exe olu≈üturuluyor...")
    
    # 7-Zip SFX mod√ºl√º ile self-extracting exe olu≈ütur
    sfx_config = """
;!@Install@!UTF-8!
Title="AzGelir Kurulum Sihirbazƒ±"
BeginPrompt="AzGelir uygulamasƒ±nƒ± kurmak istediƒüinizden emin misiniz?"
RunProgram="AzGelir_Full_Install.ps1"
;!@InstallEnd@!
"""
    
    with open("config.txt", "w", encoding="utf-8") as f:
        f.write(sfx_config)
    
    print("‚úì Self-extracting exe konfig√ºrasyonu olu≈üturuldu")

def main():
    """Ana fonksiyon"""
    print("üèóÔ∏è AzGelir Tam Otomatik Kurulum Sistemi Olu≈üturucu")
    print("=" * 60)
    
    # √ñnce ana uygulama exe'sini olu≈ütur
    print("\n1. Ana uygulama exe'si olu≈üturuluyor...")
    if not os.path.exists("dist/AzGelir.exe"):
        print("üì¶ √ñnce ana uygulamayƒ± derleyelim...")
        try:
            subprocess.check_call([sys.executable, "build_windows.py"])
        except subprocess.CalledProcessError:
            print("‚ùå Ana uygulama derlenemedi!")
            return
    
    # Kurulum dosyalarƒ±nƒ± olu≈ütur
    print("\n2. Kurulum dosyalarƒ± olu≈üturuluyor...")
    create_full_installer()
    download_dependencies()
    create_standalone_exe()
    create_auto_installer_batch()
    create_powershell_installer()
    create_self_extracting_exe()
    
    print("\nüéâ Tam otomatik kurulum sistemi olu≈üturuldu!")
    print("\nüìã Olu≈üturulan dosyalar:")
    print("   ‚Ä¢ AzGelir_Full_Auto_Install.bat - Batch installer")
    print("   ‚Ä¢ AzGelir_Full_Install.ps1 - PowerShell installer")
    print("   ‚Ä¢ full_installer.nsi - NSIS script")
    print("   ‚Ä¢ standalone_installer.py - Tkinter GUI installer")
    print("   ‚Ä¢ config.txt - Self-extracting exe config")
    
    print("\nüöÄ Kullanƒ±m:")
    print("   Sƒ±fƒ±rdan bilgisayara kurulum i√ßin:")
    print("   - AzGelir_Full_Auto_Install.bat (Y√∂netici olarak √ßalƒ±≈ütƒ±r)")
    print("   - veya AzGelir_Full_Install.ps1 (PowerShell y√∂netici)")

if __name__ == "__main__":
    main()
